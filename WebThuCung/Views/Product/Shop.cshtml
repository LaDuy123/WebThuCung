@model IEnumerable<WebThuCung.Dto.ProductViewDto>


@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_LayoutUsers.cshtml";
}

<section id="banner" class="py-3" style="background: #F9F3EC;">
    <div class="container">
        <div class="hero-content py-5 my-3">
            <h2 class="display-1 mt-3 mb-0">Shop</h2>
            <nav class="breadcrumb">
                <a class="breadcrumb-item nav-link" href="#">Home</a>
                <a class="breadcrumb-item nav-link" href="#">Pages</a>
                <span class="breadcrumb-item active" aria-current="page">Shop</span>
            </nav>
        </div>
    </div>
</section>

<div class="shopify-grid">
    <div class="container py-5 my-5">
        <div class="row flex-md-row-reverse g-md-5 mb-5">
            <main class="col-md-9">
                <div class="filter-shop d-md-flex justify-content-between align-items-center">
                    <div class="showing-product">
                        <p class="m-0">Showing 1–9 of @Model.Count() results</p>
                    </div>
                    <div class="sort-by">
                        <select class="filter-categories border-0 m-0">
                            <option value="">Default sorting</option>
                            <option value="">Name (A - Z)</option>
                            <option value="">Name (Z - A)</option>
                            <option value="">Price (Low-High)</option>
                            <option value="">Price (High-Low)</option>
                            <option value="">Rating (Highest)</option>
                            <option value="">Rating (Lowest)</option>
                            <option value="">Model (A - Z)</option>
                            <option value="">Model (Z - A)</option>
                        </select>
                    </div>
                </div>
                <div id="product-list" class="product-grid row ">
                    @foreach (var product in Model)
                    {
                        bool isSaved = ViewBag.SavedProductIds != null &&
                        ViewBag.SavedProductIds.Contains(product.idProduct);
                        <div class="col-md-4 my-4" data-productid="@product.idProduct">
                            <div class="card position-relative">
                                <a asp-controller="Product" asp-action="Detail" asp-route-id="@product.idProduct"><img src="~/images/@product.Image" class="img-fluid rounded-4" alt="image"></a>
                                <div class="card-body p-0">
                                    <a href="single-product.html">
                                        <h3 class="card-title pt-4 m-0">@product.nameProduct</h3>
                                    </a>
                                    <div class="card-text">
                                        <span class="rating secondary-font">
                                            @for (int i = 0; i < 5; i++)
                                            {
                                                <iconify-icon icon="clarity:star-solid" class="text-primary"></iconify-icon>
                                            }
                                            5.0
                                        </span>
                                        <h3 class="secondary-font text-primary">@product.sellPrice.ToString("C")</h3>
                                        <div class="d-flex flex-wrap mt-3">
                                            <a href="#" class="btn-cart me-3 px-4 pt-3 pb-3">
                                                <h5 class="text-uppercase m-0">Add to Cart</h5>
                                            </a>
                                            <a class="btn-wishlist px-4 pt-3 toggle">
                                                <iconify-icon icon="fluent:heart-28-filled" class="fs-5" style="color: @(isSaved ? "black" : "rgb(162, 162, 162)")"></iconify-icon>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- / product-grid -->

                <nav class="navigation paging-navigation text-center mt-5" role="navigation">
                    <div class="pagination loop-pagination d-flex justify-content-center align-items-center">
                        <a href="#" class="pagination-arrow d-flex align-items-center mx-3">
                            <iconify-icon icon="ic:baseline-keyboard-arrow-left" class="pagination-arrow fs-1"></iconify-icon>
                        </a>
                        <span aria-current="page" class="page-numbers mt-2 fs-3 mx-3 current">1</span>
                        <a class="page-numbers mt-2 fs-3 mx-3" href="#">2</a>
                        <a class="page-numbers mt-2 fs-3 mx-3" href="#">3</a>
                        <a href="#" class="pagination-arrow d-flex align-items-center mx-3">
                            <iconify-icon icon="ic:baseline-keyboard-arrow-right" class="pagination-arrow fs-1"></iconify-icon>
                        </a>
                    </div>
                </nav>
            </main>

            <aside class="col-md-3 mt-5">
                <div class="sidebar">
                    <div class="widget-menu">
                        <div class="widget-search-bar">
                            <div class="search-bar border rounded-2 border-dark-subtle pe-3">
                                <form id="search-form" class="text-center d-flex align-items-center" action="" method="">
                                    <input type="text" class="form-control border-0 bg-transparent" placeholder="Search for products" />
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                        <path fill="currentColor"
                                              d="M21.71 20.29L18 16.61A9 9 0 1 0 16.61 18l3.68 3.68a1 1 0 0 0 1.42 0a1 1 0 0 0 0-1.39ZM11 18a7 7 0 1 1 7-7a7 7 0 0 1-7 7Z" />
                                    </svg>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="widget-product-categories pt-5">
                        <h4 class="widget-title">Categories</h4>
                        <ul class="product-categories sidebar-list list-unstyled">
                            <li class="cat-item"><a href="/collections/categories">All</a></li>
                            @await Component.InvokeAsync("CategoryShop")
                        </ul>
                    </div>

                    <div class="widget-product-tags pt-3">
                        <h4 class="widget-title">Tags</h4>
                        <ul class="product-tags sidebar-list list-unstyled">
                            @await Component.InvokeAsync("Pet")
                        </ul>
                    </div>

                    <div class="widget-product-brands pt-3">
                        <h4 class="widget-title">Brands</h4>
                        <ul class="product-tags sidebar-list list-unstyled">
                            @await Component.InvokeAsync("Branch")
                        </ul>
                    </div>
                    <div class="widget-price-filter pt-3">
                        <h4 class="widget-title">Filter By Price</h4>
                        <ul class="product-tags sidebar-list list-unstyled">
                            <li class="tags-item">
                                <a href="#" class="nav-link filter-price" data-min="0" data-max="10000">Less than 10000Đ</a>
                            </li>
                            <li class="tags-item">
                                <a href="#" class="nav-link filter-price" data-min="10000" data-max="50000">10000Đ - 20000Đ</a>
                            </li>
                            <li class="tags-item">
                                <a href="#" class="nav-link filter-price" data-min="20000" data-max="100000">20000Đ - 100000Đ</a>
                            </li>
                            <li class="tags-item">
                                <a href="#" class="nav-link filter-price" data-min="100000" data-max="300000">100000Đ - 300000Đ</a>
                            </li>
                            <li class="tags-item">
                                <a href="#" class="nav-link filter-price" data-min="300000">Greater than 300000Đ</a>
                            </li>
                        </ul>
                    </div>

                </div>
            </aside>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        let selectedCategoryId = "";
        let selectedBranchId = "";
        let selectedPetId = "";
        let selectedMinPrice = null;
        let selectedMaxPrice = null;

        // Xử lý nhấp vào danh mục
        $(document).on('click', '.filter-category', function (e) {
            e.preventDefault();
            selectedCategoryId = $(this).data('id');
            searchProducts();
        });

        // Xử lý nhấp vào thương hiệu
        $(document).on('click', '.filter-branch', function (e) {
            e.preventDefault();
            selectedBranchId = $(this).data('id');
            searchProducts();
        });

        // Xử lý nhấp vào thú cưng
        $(document).on('click', '.filter-pet', function (e) {
            e.preventDefault();
            selectedPetId = $(this).data('id');
            searchProducts();
        });

        // Xử lý nhấp vào lọc giá
        $(document).on('click', '.filter-price', function (e) {
            e.preventDefault();
            selectedMinPrice = $(this).data('min') || null;
            selectedMaxPrice = $(this).data('max') || null;
            searchProducts();
        });

        // Hàm gọi Ajax để lọc sản phẩm
        function searchProducts() {
            $.ajax({
                url: '@Url.Action("FilterProducts", "Product")',
                type: 'GET',
                data: {
                    categoryId: selectedCategoryId,
                    branchId: selectedBranchId,
                    petId: selectedPetId,
                    minPrice: selectedMinPrice,
                    maxPrice: selectedMaxPrice
                },
                success: function (result) {
                    $('#product-list').html(result); // Cập nhật danh sách sản phẩm
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }
    });
</script>

<script>
    $(document).ready(function () {
        $('.toggle').on('click', function (e) {
            e.preventDefault(); // Ngăn trang tải lại

            var $this = $(this); // Phần tử được nhấn
            var icon = $this.find('iconify-icon'); // Tìm phần tử icon bên trong .toggle
            var idproduct = $this.closest('.swiper-slide').data('productid'); // Lấy ID sản phẩm

            $.ajax({
                url: '/Product/SaveProduct', // Đường dẫn đến action lưu sản phẩm
                type: 'POST',
                data: { idproduct: idproduct },
                success: function (response) {
                    if (response.success) {
                        alert(response.message); // Hiển thị thông báo từ phản hồi

                        // Thay đổi màu sắc dựa trên trạng thái sản phẩm
                        if (icon.css('color') === 'rgb(162, 162, 162)') {
                            icon.css('color', 'black'); // Đổi màu sang đen nếu sản phẩm được lưu
                        } else {
                            icon.css('color', 'rgb(162, 162, 162)'); // Đổi màu xám nếu sản phẩm bị xóa
                        }
                    } else {
                        if (response.message === "Please log in to save products.") {
                            // Chuyển hướng nếu người dùng chưa đăng nhập
                            window.location.href = '/User/Login';
                        } else {
                            alert(response.message); // Hiển thị thông báo lỗi khác
                        }
                    }
                },
                error: function () {
                    alert('An error occurred while saving the product.');
                }
            });
        });
    });


</script>